services:
  opsmx:
    baseUrl: http://oes-api:8085
    enabled: true
  autopilot:
    baseUrl: http://localhost:8090
    enabled: true
  platform:
    baseUrl: http://localhost:8095
    userGroupApiPath: /platformservice/v1/users/{username}/usergroups/importAndCache
    enabled: true
  dashboard:
    baseUrl: http://localhost:8094
    enabled: true
  visibility:
    baseUrl: http://localhost:8096
    enabled: true
  auditservice:
    baseUrl: http://localhost:8097
    enabled: true
  auditclient:
    baseUrl: http://localhost:8098
    enabled: true
  ssdservice:
    baseUrl: http://localhost:8099
    enabled: true
  ssdopaservice:
    baseUrl: http://localhost:8200
    enabled: false
  oesui:
    externalUrl: http://150.238.22.102

gate:
  installation:
    mode: common #allowed values are --> oes , common

retrofit:
  connectTimeout: 30000
  readTimeout: 30000
  callTimeout: 30000
  writeTimeout: 30000
  retryOnConnectionFailure: true

cache:
  expiryTime: 600000

rbac:
  feature:
    application:
      enabled: true

security:
  basic:
    enabled: false
  user: {}
  oauth2:
    enabled: false
    client:
      clientId: # client ID
      clientSecret: # client secret
      accessTokenUri: ${oauth2.accessTokenUri}
      userAuthorizationUri: ${oauth2.userAuthorizationUri}
      scope: user:email
    resource:
      userInfoUri: ${oauth2.userInfoUri}
    userInfoMapping:
      email: email
      firstName: ''
      lastName: name
      username: ${oauth2.userInfoMapping.username}
    provider: ${oauth2.provider}
cors:
  allowed-origins-pattern: ^https?://(?:localhost|137.117.94.95)(?::[1-9]\d*)?/?
ldap:
  enabled: true
  url: ${ldap.url}
  userDnPattern:  uid={0},ou=users,dc=example,dc=org
  managerDn: cn=admin,dc=example,dc=org
  managerPassword: ${ldap.password}
  groupSearchBase: ou=groups,dc=example,dc=org
  groupSearchFilter: member={0}
file:
  enabled: false
  url: /platformservice/v1/users/authenticate
authn:
  mode: session

saml:
  enabled: false
  keyStore: /opt/spinnaker/saml/saml.jks
  keyStorePassword: ${saml.keyStorePassword}
  keyStoreAliasName: saml
  metadataUrl: /opt/spinnaker/saml/metadata.xml
  redirectProtocol: https
  redirectHostname: ${saml.redirectHostname}
  redirectBasePath: /
  issuerId: ${saml.issuerId}
google: {}
logging:
  level:
    com.netflix.spinnaker.gate.security: INFO
    org.springframework.security: INFO
    org.springframework.web: INFO

redis:
  connection: redis://spin-redis:6379

server:
  session:
    timeout-in-seconds: 7200
  tomcat:
    protocolHeader: X-Forwarded-Proto
    remoteIpHeader: X-Forwarded-For
    internalProxies: .*

management:
  health:
    elasticsearch:
      enabled: false
    ldap:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
